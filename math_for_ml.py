# -*- coding: utf-8 -*-
"""Math for ML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XJv8_A76rXEuj17eSOy434uRmdHrl8SJ

Compute the dot product of vectors ùëé=[1,2,3] and b=[4,5,6]. Extend this by implementing a function to compute dot products for higher dimensions.
"""

def dotProduct(vectors):
  size = len(vectors[0])
  for j in vectors:
    if len(j)!=size:
      raise ValueError("Unequal Size")
  val = 0
  for i in range(size):
    temp = 1
    for vect in vectors:
      temp *= vect[i]
    val +=temp

  return val

vector1 = [1, 2, 3]
vector2 = [4, 5, 6]
vector3 = [7, 8, 9]
dotProduct([vector1,vector2,vector3])

"""Perform matrix multiplication with
ùê¥
=
[
1
2
3
4
] and
ùêµ
=
[
5
6
7
8
]
. Extend to multiply large sparse matrices.
"""

def matrixMult(a,b):
  size = len(a[0])
  arr = []
  for i in range(a):
    for val1 in a:
      temp = 1
      val2 = b[i]
      for j in range(len(val1)):
        temp =  val[j] *val2[j]



a = [[1, 2],[3,4]]
b= [[5,6],[7,8]]
matrixMult(a,b)